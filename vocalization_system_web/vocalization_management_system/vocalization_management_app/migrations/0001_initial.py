# Generated by Django 5.1.2 on 2025-02-19 12:23

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnimalTable',
            fields=[
                ('animal_id', models.AutoField(primary_key=True, serialize=False)),
                ('species_name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Zoo',
            fields=[
                ('zoo_id', models.AutoField(primary_key=True, serialize=False)),
                ('zoo_name', models.CharField(max_length=100, unique=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_email', models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('1', 'Admin'), ('2', 'Staff')], default='2', max_length=1)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('full_name', models.CharField(default='User', max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OriginalAudioFile',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False)),
                ('audio_file', models.FileField(upload_to='audio_files/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['wav'])])),
                ('audio_file_name', models.CharField(max_length=100)),
                ('recording_date', models.DateTimeField()),
                ('animal_type', models.CharField(choices=[('amur_leopard', 'Amur Leopard'), ('amur_tiger', 'Amur Tiger')], max_length=20)),
                ('file_size_mb', models.FloatField(blank=True, null=True)),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='original_audio', to='vocalization_management_app.animaltable')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_audio', to='vocalization_management_app.adminprofile')),
                ('zoo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='original_audio', to='vocalization_management_app.zoo')),
            ],
        ),
        migrations.CreateModel(
            name='DetectedNoiseAudioFile',
            fields=[
                ('detected_noise_file_id', models.AutoField(primary_key=True, serialize=False)),
                ('detected_noise_file_path', models.CharField(max_length=255)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('saw_count', models.IntegerField()),
                ('saw_call_count', models.IntegerField()),
                ('file_size_mb', models.FloatField()),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('original_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detected_noises', to='vocalization_management_app.originalaudiofile')),
            ],
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Spectrogram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_path', models.ImageField(upload_to='spectrograms/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('audio_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spectrograms', to='vocalization_management_app.originalaudiofile')),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vocalization_management_app.staffprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessedAudioFile',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False)),
                ('audio_file_name', models.CharField(max_length=100)),
                ('recording_date', models.DateTimeField()),
                ('file_size_mb', models.FloatField()),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('original_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processed_audio', to='vocalization_management_app.originalaudiofile')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vocalization_management_app.staffprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Processed', 'Processed')], default='Pending', max_length=20)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('audio_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='database_entry', to='vocalization_management_app.originalaudiofile')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vocalization_management_app.staffprofile')),
            ],
        ),
        migrations.CreateModel(
            name='AudioProcessor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saw_count', models.IntegerField(default=0)),
                ('saw_call_count', models.IntegerField(default=0)),
                ('processed_at', models.DateTimeField(auto_now_add=True)),
                ('audio_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_results', to='vocalization_management_app.originalaudiofile')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vocalization_management_app.staffprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Waveform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_path', models.ImageField(upload_to='waveforms/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('audio_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waveforms', to='vocalization_management_app.originalaudiofile')),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vocalization_management_app.staffprofile')),
            ],
        ),
        migrations.AddField(
            model_name='animaltable',
            name='zoo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='animals', to='vocalization_management_app.zoo'),
        ),
    ]
